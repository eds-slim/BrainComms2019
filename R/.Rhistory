install.packages(car"")
quit()
install.packages("lme4")
install.packages("nloptr")
install.packages("lme4")
install.packages("statnet")
install.packages("ergm")
install.packages("bergm")
install.packages("Bergm")
faz.net
install.packages("igraph")
install.packages("ggplot2")
install.packages("ggraph")
install.packages("units")
install.packages("units")
install.packages("units")
install.packages("ggraph")
install.packages("plyr")
install.packages("scatterplotmatrix")
install.packages("Scatterplotmatrix")
install.packages("nlmer")
install.packages("lmer")
??lmer
??nlme
quit
quit()
quit()
setwd("~/Documents/Research/Projects/Medicine/Chronic stroke networks/2018 05 08 Chronic stroke refactored/R/Various scripts")
source("./makeconfig.r")
setwd("~/Documents/Research/Projects/Medicine/Chronic stroke networks/2018 05 08 Chronic stroke refactored/R")
source("./makeconfig.r")
setwd(file.path(getwd(),".."))
BASE_DIR<-getwd();
setwd(file.path(getwd(),"R"))
OUTPUT_DIR <- file.path(BASE_DIR,".output",normalisation,thresholding,sprintf("%1.2f",griddelta))
color_pal <- pal_npg()(10)
ID.exclude <- c(28,30,32,36);
data.subjects<-read.csv(file.path(OUTPUT_DIR,'intermediate','subjectdata.csv'),header = TRUE)
data.subjects<-within(data.subjects,{
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
sex<-as.character(sex);
sex <- factor(revalue(sex,c("1"="male","2"="female")));
})
??revalue
# load packages
library(car)
library(plyr)
library(lme4)
library(nlme)
library(ggplot2)
library(lsr)
library(grid)
library(gridExtra)
library(ggpubr)
library(ggsignif)
library(tidyr)
library(ggsci)
library(cowplot)
library(dplyr)
library(gtable)
library(ggraph)
library(igraph)
library(ggraph)
library(magick)
data.subjects<-read.csv(file.path(OUTPUT_DIR,'intermediate','subjectdata.csv'),header = TRUE)
data.subjects<-within(data.subjects,{
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
sex<-as.character(sex);
sex <- factor(revalue(sex,c("1"="male","2"="female")));
})
data.subjects
data.patients<-read.csv(file.path(OUTPUT_DIR,'intermediate','patientdata.csv'),header = TRUE)
data.patients<-data.patients[!data.patients$ID%in%ID.exclude,]
data.hemispheres<-read.csv(file.path(OUTPUT_DIR,'intermediate','hemispheredata.csv'),header = TRUE)
data.hemispheres<-within(data.hemispheres,{
region<-revalue(as.factor(region),c("0"="LH","1"="RH"));
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
})
data.hemispheres$relpos <- as.factor(mapply(relposfcn,data.hemispheres$region, data.hemispheres$group))
data.hemispheres$relpos<-factor(data.hemispheres$relpos, levels=c("healthy","contra","ipsi"))
data.hemispheres<-data.hemispheres[!data.hemispheres$ID%in%ID.exclude,]
setwd(file.path(getwd(),".."))
BASE_DIR<-getwd();
setwd(file.path(getwd(),"R"))
OUTPUT_DIR <- file.path(BASE_DIR,".output",normalisation,thresholding,sprintf("%1.2f",griddelta))
color_pal <- pal_npg()(10)
ID.exclude <- c(28,30,32,36);
data.subjects<-read.csv(file.path(OUTPUT_DIR,'intermediate','subjectdata.csv'),header = TRUE)
data.subjects<-within(data.subjects,{
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
sex<-as.character(sex);
sex <- factor(revalue(sex,c("1"="male","2"="female")));
})
data.subjects<-data.subjects[!data.subjects$ID%in%ID.exclude,]
data.patients<-read.csv(file.path(OUTPUT_DIR,'intermediate','patientdata.csv'),header = TRUE)
data.patients<-data.patients[!data.patients$ID%in%ID.exclude,]
data.hemispheres<-read.csv(file.path(OUTPUT_DIR,'intermediate','hemispheredata.csv'),header = TRUE)
data.hemispheres<-within(data.hemispheres,{
region<-revalue(as.factor(region),c("0"="LH","1"="RH"));
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
})
data.hemispheres$relpos <- as.factor(mapply(relposfcn,data.hemispheres$region, data.hemispheres$group))
relposfcn <- function(region,group){
if(group=="control") return("healthy");
if((region=="LH" & group=="left") | (region=="RH" & group=="right")) return("ipsi");
if((region=="LH" & group=="right") | (region=="RH" & group=="left")) return("contra");
}
ggplot_dual_axis = function(plot1, plot2, which.axis = "x") {
# Update plot with transparent panel
plot2 = plot2 + theme(panel.background = element_rect(fill = NA))
grid.newpage()
# Increase right margin if which.axis == "y"
if(which.axis == "y") plot1 = plot1 + theme(plot.margin = unit(c(0.7, 1.5, 0.4, 0.4), "cm"))
# Extract gtable
g1 = ggplot_gtable(ggplot_build(plot1))
g2 = ggplot_gtable(ggplot_build(plot2))
# Overlap the panel of the second plot on that of the first
pp = c(subset(g1$layout, name == "panel", se = t:r))
g = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name=="panel")]], pp$t, pp$l, pp$b, pp$l)
# Steal axis from second plot and modify
axis.lab = ifelse(which.axis == "x", "axis-b", "axis-l")
ia = which(g2$layout$name == axis.lab)
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
# Switch position of ticks and labels
if(which.axis == "x") ax$heights = rev(ax$heights) else ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
if(which.axis == "x")
ax$grobs[[2]]$y = ax$grobs[[2]]$y - unit(1, "npc") + unit(0.15, "cm") else
ax$grobs[[1]]$x = ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
# Modify existing row to be tall enough for axis
if(which.axis == "x") g$heights[[2]] = g$heights[g2$layout[ia,]$t]
# Add new row or column for axis label
if(which.axis == "x") {
g = gtable_add_grob(g, ax, 2, 4, 2, 4)
g = gtable_add_rows(g, g2$heights[1], 1)
g = gtable_add_grob(g, g2$grob[[6]], 2, 4, 2, 4)
} else {
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
#g = gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b - 1)
}
# Draw it
grid.draw(g)
return(g)
}
data.hemispheres<-within(data.hemispheres,{
region<-revalue(as.factor(region),c("0"="LH","1"="RH"));
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
})
data.hemispheres<-read.csv(file.path(OUTPUT_DIR,'intermediate','hemispheredata.csv'),header = TRUE)
data.hemispheres<-within(data.hemispheres,{
region<-revalue(as.factor(region),c("0"="LH","1"="RH"));
group<-revalue(as.factor(group),c("0"="control","1"="left","2"="right"));
})
data.hemispheres$relpos <- as.factor(mapply(relposfcn,data.hemispheres$region, data.hemispheres$group))
data.hemispheres$relpos<-factor(data.hemispheres$relpos, levels=c("healthy","contra","ipsi"))
data.hemispheres<-data.hemispheres[!data.hemispheres$ID%in%ID.exclude,]
data.patients
data.subjects
data.subjects %>% filter(group != 'control')
data.subjects %>% filter(group != 'control') %>% summarise(mean(ae))
data.subjects %>% filter(group != 'control') %>% summarise(mean(age))
data.conn <- read.csv(file.path(OUTPUT_DIR,'intermediate','connectivity.csv'), header = T)
data.conn<-within(data.conn,{
region<-revalue(as.factor(region),c("0"="LH","1"="RH"));
})
data.conn<-data.conn[!data.conn$ID%in%ID.exclude,]
data.conn
data.subjects
merge(data.subjects, data.patients)
merge(data.subjects, data.patients, data.hemispheres)
join_all(data.subjects, data.patients,data.hemispheres)
?join all
join_all(data.subjects, data.patients,data.hemispheres, type = 'full')
join_all(list(data.subjects, data.patients,data.hemispheres), type = 'full')
join_all(list(data.subjects, data.patients,data.hemispheres, data.conn), type = 'full')
d<-join_all(list(data.subjects, data.patients,data.hemispheres, data.conn), type = 'full')
write.csv(d, file = 'tableSFB1inclq50.csv', sep = ',', col.names = TRUE)
write.table(d, file = 'tableSFB1inclq50.csv', sep = ',', col.names = TRUE)
